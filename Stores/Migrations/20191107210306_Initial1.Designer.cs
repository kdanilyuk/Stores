// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoresChain.Models;

namespace Stores.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20191107210306_Initial1")]
    partial class Initial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StoresChain.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Very very tasty",
                            Name = "Chicken Burger",
                            StoreId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Heavenly pleasure",
                            Name = "Macaron",
                            StoreId = 3
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "So cold",
                            Name = "IceCream BN",
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("StoresChain.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosingTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            Address = "MoMo",
                            ClosingTime = "22:00",
                            Name = "Baskin Robbins",
                            OpeningTime = "10:00"
                        },
                        new
                        {
                            StoreId = 2,
                            Address = "Galileo",
                            ClosingTime = "23:00",
                            Name = "McDonalds",
                            OpeningTime = "60:00"
                        },
                        new
                        {
                            StoreId = 3,
                            Address = "Prytytskogo 156",
                            ClosingTime = "23:00",
                            Name = "BonGenie",
                            OpeningTime = "10:00"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
